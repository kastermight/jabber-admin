
AutoItSetOption

Изменяет поведение множества функций/параметров AutoIt.

AutoItSetOption ( "option" [, param] )

---  Таблица параметров  ---
option
	Опция для изменения. См. примечания.
param
	[опционально] Новое значение опции. Тип и значения зависят от устанавливаемой опции. См. примечания. Если параметр не указан, функция просто возвращает текущее значение опции. Ключевое слово Default может быть использовано в качестве параметра, чтобы изменить значение опции на значение по умолчанию.

---  Таблица возвращаемых значений  ---
Успех:	Возвращает предыдущее значение опции.
Ошибка:	Устанавливает значение @error не равным нулю. Ошибка происходит, если переданы неправильные параметры (например, опция с указанным именем не существует).

---  Примечания  ---
Вы можете использовать Opt() вместо AutoItSetOption().

Доступны следующие опции:

---  Таблица параметров  ---
Option
	Param
CaretCoordMode
	Устанавливает кареточный способ координат используемый в функциях, абсолютные координаты или координаты относительно текущего активного окна:
	0 = относительно координат активного окна
	1 = абсолютных координатах экрана (по умолчанию)
	2 = относительно координат клиентской области активного окна
ExpandEnvStrings
	Изменить интерпретацию литеральных (буквальных) строк и символов %.  По умолчанию строки рассматриваются литерально (буквально), эта опция позволяет вам использовать %environment% переменные в строках, например, "Временный каталог: %temp%".
	1 = использовать как переменную (как в AutoIt v2)
	0 = использовать как текст (по умолчанию)
	 Без этой опции обычный способ выглядит так: 	"Временный каталог: " & EnvGet("temp")
ExpandVarStrings
	Изменить интерпретацию литеральных (буквальных) строк и символов variable/macro ($ и @).  По умолчанию строки рассматриваются литерально (буквально), эта опция позволяет использовать переменные и макросы внутри строк, например, "Значение var1=$var1$".
	1 = использовать как переменную / макрос (если вы хотите использовать $ и @ в этом режиме как текст, дублируйте эти символы: "Значение var1=$$var1$".
	0 = использовать как текст (по умолчанию)
GUICloseOnESC
	При нажатии ESC в GUI высылается сообщение $GUI_EVENT_CLOSE.  Эта опция переключает поведение между вкл и выкл.
	1 = Отправить $GUI_EVENT_CLOSE при нажатии ESC (по умолчанию).
	0 = Не отправлять $GUI_EVENT_CLOSE при нажатии ESC.
GUICoordMode
	Изменить способ установки позиции элемента определяемый функциями GUICtrlSetPos и GUICtrlCreate....
	1 = абсолютные координаты (по умолчанию) всё же относительно окна.
	0 = относительно позиции начала последнего элемента (верхний левый угол).
	2 = ячейка позиционируется относительно текущей ячейки. Значение -1 для левого или верхнего параметра значит использовать предыдущую координату ячейки.
	Таким образом следующая ячейка вниз (-1,отступ); следующая ячейка вправо (отступ,-1); текущая ячейка (-1,-1).
	Понятно, что "отступ" не может быть равным -1, так как обозначает отсутствие сдвига. Но если вы используете multiple ширину, то выбирайте пропуск или возврат назад.
GUIDataSeparatorChar
	Определяет символ, который является разделителем подпунктов в GUICtrlSetData.
	 По умолчанию символ '|'.
GUIOnEventMode
	Включить / отключить режим уведомления OnEvent.
	0 = (по умолчанию) отключить.
	1 = включить.
GUIResizeMode
	Установить стандартное поведение элементов управления при изменении размера окна. Только для элементов, которым не указано индивидуальное поведение.
	0 = (по умолчанию) использовать стандартный способ.
	сумма чисел (менее 1024) определяющее поведение, смотрите в таблице GUICtrlSetResizing.
GUIEventOptions
	Изменить системные события или значения возвращаемые функциями GUI.
	0 = (по умолчанию) окно реагирует на кнопки Свернуть, Восстановить, Развернуть, Изменить размер.
	1 = запретить окну реагировать на кнопки Свернуть, Восстановить, Развернуть, Изменить размер. Просто посылает уведомления.
MouseClickDelay
	Изменяет продолжительность паузы между кликами мыши.
	Время паузы в миллисекундах (по умолчанию=10).
MouseClickDownDelay
	Изменяет продолжительность нажатой кнопки мыши, прежде чем отпустить.
	Время в миллисекундах (по умолчанию=10).
MouseClickDragDelay
	Изменяет продолжительность паузы в начале и в конце операции перетаскивания мышкой.
	Время в миллисекундах (по умолчанию=250).
MouseCoordMode
	Устанавливает способ отсчёта координат используемый в функциях мыши, или абсолютные координаты или координаты относительно текущего активного окна:
	0 = относительно координат активного окна
	1 = абсолютное экранные координаты (по умолчанию)
	2 = относительно координат клиентской области активного окна
MustDeclareVars
	Если используется эта опция, то все переменные должны быть предварительно объявлены с Dim, Local или Global прежде чем они будут использованы - это избавляет от ошибок переменных, вызывающих сбой.
	1 = Переменные должны быть объявлены
	0 = Переменные не обязательно объявлять (по умолчанию)
PixelCoordMode
	Устанавливает способ отсчёта координат используемый в Pixel-функциях, или абсолютные координаты или координаты относительно окна определяемым HWND (по умолчанию активное окно):
	0 = относительно координат определяемого окна
	1 = абсолютное экранные координаты (по умолчанию)
	2 = относительно координат клиентской области определяемого окна
SendAttachMode
	Specifies if AutoIt attaches input threads when using Send() function.  When not attaching (по умолчанию mode=0) detecting the state of capslock/scrolllock and numlock can be unreliable under NT4.  However, when you specify attach mode=1 the Send("{... down/up}") syntax will not work and there may be problems with sending keys to "hung" windows.  ControlSend() ALWAYS attaches and is not affected by this mode.
	0 = don't attach (по умолчанию)
	1 = attach
SendCapslockMode
	Указывает на то, что AutoIt  должен помнить состояние CapsLock перед выполнением функции Send и восстановить предыдущее состояние впоследствии.
	0 = не запоминает и не восстанавливает
	1 = запоминает и восстанавливает (по умолчанию)
SendKeyDelay
	Изменяет продолжительность паузы между эмулированными (имитированными) нажатиями клавиш.  Значение - 0 полностью устраняет задержки.
	Время в миллисекундах (по умолчанию=5).
SendKeyDownDelay
	Изменяет продолжительность нажатого состояния клавиши, перед тем как отпустить.  Для программ принимающих это при регистрации нажатых клавиш (и многих игр) вам возможно понадобится повысить это значения выше чем по умолчанию.  Значение - 0 полностью устраняет задержки.
	Время в миллисекундах (по умолчанию=5).
TCPTimeout
	Указывает время после которого функции TCP завершаются, если отсутствует связь.
	Время в миллисекундах  (по умолчанию=100).
TrayAutoPause
	Пауза скрипта при клике на иконке в трее.
	0 = нет паузы
	1 = пауза (по умолчанию). Пауза не появляется, если меню нестандартное.
TrayIconDebug
	Если включен, то показывает текущую строку скрипта во всплывающей подсказке возле иконки трея для помощи в отладке.
	0 = не показывать информацию отладки (по умолчанию)
	1 = показать отладку
TrayIconHide
	Скрывает иконку скрипта в трее.  Примечание:  Иконка всё же первоначально появится ~750 миллисекунд.
	0 = показать иконку (по умолчанию)
	1 = скрыть иконку
TrayMenuMode
	Расширить поведение меню для иконки в трее. Это может быть комбинацией (сумма) следующих значений.
	0 = стандартные пункты меню (Script Paused/Exit) в виде придатка к пользовательскому меню; галочки пользовательского меню автоматически снимаются; если вы дважды кликните на иконке в трее, тогда возвращается идентификатор, который имеет "стиль по умолчанию" (по умолчанию).
	1 = отсутствует стандартное меню
	2 = галочки пользовательского меню не снимаются автоматически, если кликнуть на них
	4 = Не возвращается menuitemID который имеет "стиль по умолчанию" в главном контекстном меню, если вы дважды кликните на иконке в трее
	8 = отключить авто-переключение радио-пунктов группы
TrayOnEventMode
	Включить / выключить функции уведомления OnEvent для трея.
	0 = (по умолчанию) отключить
	1 = включить
WinDetectHiddenText
	Указывает, что скрытый текст окна может быть "виден" соответствующими оконными функциями.
	0 = Не определять скрытый текст (по умолчанию)
	1 = Определять скрытый текст
WinSearchChildren
	Позволяет поиск дочерних окон также как и окон верхнего уровня (корневых-родительских).
	0 = Только поиск окон верхнего уровня (по умолчанию)
	1 = Поиск окон верхнего уровня и дочерних
WinTextMatchMode
	Изменяет метод сопоставления текстов окон при операции поиска.
	1 = Полный / медленный режим (по умолчанию)
	2 = Быстрый режим
	В быстром режиме AutoIt обычно "видит" тексты диалогов, кнопок и заголовков некоторых элементов управления.  В режиме по умолчанию AutoIt может увидеть гораздо больше текста (например, содержимое окна "Блокнот").
	Если у вас возникли проблемы с производительностью при выполнении поиска в окне, то может помочь переход на "быстрый" режим.
WinTitleMatchMode
	Изменяет метод сопоставления заголовков окон при операции поиска.
	1 = Начальное соответствие заголовка (по умолчанию)
	2 = Соответствие любой подстроке в заголовке
	3 = Точное соответствие заголовка
	4 = Расширенный режим, смотрите Заголовки и текст окон (дополнительно)
	От -1 до -4 = принудительное сопоставление в нижнем регистре для соответствующих типов сопоставления.
WinWaitDelay
	Изменяет продолжительность паузы после успешных оконных функций.
	Время в миллисекундах (по умолчанию=250).

---  Смотрите также  ---
Many.