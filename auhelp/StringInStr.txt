
StringInStr

Проверяет вхождение подстроки в указанную строку.

StringInStr ( "string", "substring" [, casesense [, occurrence [, start [, count]]]] )

---  Таблица параметров  ---
string
	Проверяемая строка.
substring
	Подстрока для поиска.
casesense
	[опционально] флаг установки чувствительности к регистру написания.
	0 = не учитывать регистр, используется локальный язык (по умолчанию)
	1 = учитывать регистр
	2 = не учитывать регистр, используется основное / быстрое сравнение
occurrence
	[опционально] номер искомого вхождения подстроки в строку. Используйте отрицательное значение параметра для поиска справа. По умолчанию 1 (поиск первого вхождения).
start
	[опционально] начальная позиция поиска.
count
	[опционально] количество символов для поиска.  Это ограничивает поиск на участке полной строки.  См. примечания.

---  Таблица возвращаемых значений  ---
Успех:	Возвращает позицию найденной подстроки.
Ошибка:	Возвращает 0, если подстрока не найдена. Значение @error, равное 1, означает, что неверно заданы значения параметров "start” или "occurrence”

---  Примечания  ---
Нумерация символов в строке начинается с 1.

Параметр count должен быть больше длины искомой подстроки. Параметр "count" (в сочетании с параметром "start") ограничивает поиск подстроки в полной строке. Следующие два выражения работают одинаково:
StringInStr("the string to search", "string", 0, 1, 1, 11)
StringInStr(StringMid("the string to search", 1, 11), "string")

---  Смотрите также  ---
StringCompare, StringLeft, StringLen, StringLower, StringMid, StringRight, StringTrimLeft, StringTrimRight, StringUpper, StringRegExp, StringSplit