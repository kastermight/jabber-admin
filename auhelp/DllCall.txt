
DllCall

Вызывает функцию из DLL.

DllCall ( "dll", "return type", "function" [, type1, param1 [, type n, param n]] )

---  Таблица параметров  ---
dll
	Имя файла DLL, например используйте "user32.dll". Также можно использовать указатель полученный от DllOpen (смотрите примечания).
return type
	Тип возвращаемого значения функции (смотрите ниже).
function
	Имя функции вызываемой из DLL, например "MessageBox" или её порядковый номер, например 62.
type1
	[опционально] Тип параметра (смотрите примечания).
param1
	[опционально] Значение параметра (смотрите примечания).
type n
	[опционально] Тип n-ого параметра (смотрите примечания).
param n
	[опционально] Значение n-ого параметра (смотрите примечания).

Валидные типы:

---  Таблица параметров  ---
Тип
	Описание
none
	нет значения (только для возвращения типа параметра - эквивалентно void в C)
BYTE
	беззнаковое 8 битное целое
BOOLEAN
	беззнаковое 8 битное целое
short
	16 битное целое
USHORT
	беззнаковое 16 битное целое
WORD
	беззнаковое 16 битное целое
int
	32 битное целое
long
	32 битное целое
BOOL
	32 битное целое
UINT
	беззнаковое 32 битное целое
ULONG
	беззнаковое 32 битное целое
DWORD
	беззнаковое 32 битное целое
INT64
	64 битное целое
UINT64
	беззнаковое 64 битное целое
ptr
	общий указатель (void *)
HWND
	дескриптор окна (pointer)
HANDLE
	дескриптор (pointer)
float
	число одинарной точности с плавающей точкой
double
	число двойной точности с плавающей точкой
INT_PTR, LONG_PTR, LRESULT, LPARAM
	большое целое число, достаточное для хранения указателя при запуске x86 или x64 версии AutoIt.
UINT_PTR, ULONG_PTR, DWORD_PTR, WPARAM
	беззнаковое большое целое число, достаточное для хранения указателя при запуске x86 или x64 версии AutoIt.
str
	ANSI строка (минимум выделяется 65536 символа).
wstr
	UNICODE широкий символ строки (минимум выделяется 65536 символа).
*
	Add * to the end of another type to pass it by reference.  For example "int*" passes a pointer to an "int" type.

Преобразование типов "Windows API" в тип AutoIt:

---  Таблица параметров  ---
Типы в WINDOWS API
	Типы в AutoIt
LPCSTR/LPSTR
	str
LPCWSTR/LPWSTR
	wstr
LPVOID
	ptr
LPxyz
	xyz*
HINSTANCE
	handle
HRESULT
	long
LONGLONG/LARGE_INTEGER
	INT64
ULONGLONG/ULARGE_INTEGER
	UINT64
SIZE_T
	ULONG_PTR

Для использования вложенных структур внутри структуры необходимо заново определить вложенную структуру.  Например, структура, содержащая 2 POINT структуры ("long;long") должна быть объявлена как "long;long;long;long".  Первые два long значения соответствуют первой POINT структуре, а вторые два значения соответствуют второй POINT структуре.

Подробности типов "Windows API" смотрите MSDN.

---  Таблица возвращаемых значений  ---
Успех:	@error = 0.
Ошибка:	Устанавливает @error	
@error:	1 - невозможно использовать файл DLL,
	2 неизвестный возвращаемый тип (return type),
	3 функция не найдена в файле DLL,
	4 неверное число в параметрах.

Смотрите примечания.

---  Примечания  ---
Если используется имя/путь dll, то DLL автоматически загружается и выгружается в конце вызова. Если вы хотите вручную контролировать загрузку и выгрузку DLL, тогда используйте функции DllOpen и DllClose и возвращаемый дескриптор вместо имя/путь dll в этой функции.

По умолчанию, AutoIt использует метод вызова 'stdcall'. Для использования метода 'cdecl' вставьте ':cdecl' после возвращаемого типа.
DllCall("SQLite.dll", "int:cdecl", "sqlite3_open", "str", $sDatabase_Filename , "long*", 0).

По умолчанию, AutoIt пытается использовать ANSI версию имени функции, т. е. MessageBoxA, когда в имени указана функция MessageBox. Для вызова Unicode версии используйте MessageBoxW.

Если вызов функции вызвал сбой, то @error устанавливается в 1. Иначе возвращается массив, который содержит возвращаемое функцией значение и копирует все параметры (включая параметры, которые функция может изменить при выполнении вызова).
$return[0] = возвращаемое значение функции
$return[1] = параметр_1
$return[2] = параметр_2
...
$return[n] = параметр_n

---  Смотрите также  ---
DllCallbackFree, DllCallbackGetPtr, DllCallbackRegister, DllOpen, DllClose, DllStructCreate, DllStructGetPtr